@model PRIS.Web.Models.StudentsResultViewModel

@{
    ViewData["Title"] = "EditResult";
}



<h4>Redaguoti testo rezultatus</h4>
<hr />
<div class="text-danger">@ViewContext.TempData["ErrorMessage"]</div>
<div class="row">

    <form asp-action="EditResult">
        <div>

            Kandidatas:
            @Html.DisplayFor(model => model.FirstName)

            @Html.DisplayFor(model => model.LastName)
        </div>
        <br />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <span asp-validation-for="Task1_1" class="text-danger"></span>
        <span asp-validation-for="Task1_2" class="text-danger"></span>
        <span asp-validation-for="Task1_3" class="text-danger"></span>
        <span asp-validation-for="Task2_1" class="text-danger"></span>
        <span asp-validation-for="Task2_2" class="text-danger"></span>
        <span asp-validation-for="Task2_3" class="text-danger"></span>
        <span asp-validation-for="Task3_1" class="text-danger"></span>
        <span asp-validation-for="Task3_2" class="text-danger"></span>
        <span asp-validation-for="Task3_3" class="text-danger"></span>
        <span asp-validation-for="Task3_4" class="text-danger"></span>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task1_1)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task1_1" class="form-control" required
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task1_2)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task1_2" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task1_3)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task1_3" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task2_1)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task2_1" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task2_2)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task2_2" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task2_3)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task2_3" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task3_1)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task3_1" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task3_2)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task3_2" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task3_3)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task3_3" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">

            <div class="input-group-prepend">
                <span class="input-group-text">@Html.DisplayNameFor(model => model.Task3_4)</span>
            </div>
            <input type="number" step="0.5" min="0" asp-for="Task3_4" class="form-control"
                   oninvalid="this.setCustomValidity('Balas neįvestas arba įvestas mažiau negu 0')"
                   oninput="this.setCustomValidity('')">
        </div>

        <div class="mt-3">@Html.DisplayNameFor(model => model.CommentResult)</div>

        <input asp-for="CommentResult" class="form-control">
        <span asp-validation-for="CommentResult" class="text-danger"></span>
        <br />
        <div class="form-group">
            <input type="submit" value="Išsaugoti" class="btn btn-primary" />
        </div>
    </form>
</div>


<div>
    @Html.ActionLink("Grįžti", "Index", "Students", new { id = Model.ExamId })
</div>
