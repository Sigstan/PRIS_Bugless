@model PRIS.Web.Models.CourseModels.StudentLockDataListViewModel

@{
    ViewData["Title"] = "LockingOfStudentData";
}
    <h3>
        Studentų duomenų užrakinimas
    </h3>
    @Html.ActionLink("Grįžti į pagrindinį", "Main", "Home", new { }, new { @class = "btn btn-outline-secondary float-right rounded-pill" })
    <form asp-action="LockingOfStudentData" method="get" class="d-none d-sm-inline-block form-inline mr-auto my-2 my-md-0 mw-100">
        <div class="input-group">
            <select name="ExamId" class="btn btn-outline-secondary float-right mr-3">
                <option style="display:none">@Model.SelectedAcceptancePeriod</option>

                @foreach (var ap in Model.AcceptancePeriods)
                {
                    <option value="@ap.Text">@ap.Text</option>
                }
            </select>
            <select name="CityId" class="btn btn-outline-secondary float-right mr-3">
                <option style="display:none">@Model.SelectedCity</option>
                @foreach (var ap in Model.Cities)
                {
                    <option value="@ap.Text">@ap.Text</option>
                }
            </select>
            <select name="CourseId" class="btn btn-outline-secondary float-right mr-3">
                <option style="display:none">@Model.SelectedPriority</option>
                @foreach (var ap in Model.Courses)
                {
                    <option value="@ap.Text">@ap.Text</option>
                }
            </select>
            <button class="btn btn-primary rounded-circle ml-1 mr-1" type="submit" value="Search">
                <i class="fas fa-search fa-sm"></i>
            </button>
            <a class="fa fa-times ml-1 mr-1 center" asp-action="Index" aria-hidden="true"></a>
        </div>
    </form>
<hr />
<div class="text-danger">@ViewContext.TempData["ErrorMessage"]</div>
<div class="text-success">@ViewContext.TempData["SuccessMessage"]</div>
<form asp-action="LockingOfStudentData">
    <table class="table table-bordered StudentDataLockingTable">
        <thead>
            <tr class="text-center">
                <th>@Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().FirstName), 
                @Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().LastName)</th>
                <th>@Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().Email)</th>
                <th>@Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().PhoneNumber)</th>
                <th>
                    @Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().FinalTestPoints)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().ConversationGrade)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().FinalAverageGrade)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().Priority)
                </th>
                <th>@Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().SignedAContract)</th>
                <th>@Html.DisplayNameFor(model => model.StudentDataLocking.FirstOrDefault().StudentDataLocked)</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.StudentDataLocking.Count(); i++)
            {
                <tr>
                    <td>
                        <a asp-action="Edit" asp-controller="Students" asp-route-id="@Model.StudentDataLocking[i].Id">
                            @Html.DisplayFor(modelItem => modelItem.StudentDataLocking[i].FirstName)
                            @Html.DisplayFor(modelItem => modelItem.StudentDataLocking[i].LastName)
                        </a>
                        <input type="hidden" name="studentId" value="@Model.StudentDataLocking[i].Id" class="text" asp-for="@Model.StudentDataLocking[i].FirstName" />
                    </td>
                   
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.StudentDataLocking[i].Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.StudentDataLocking[i].PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.StudentDataLocking[i].FinalTestPoints)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.StudentDataLocking[i].ConversationGrade)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.StudentDataLocking[i].FinalAverageGrade)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem.StudentDataLocking[i].Priority)
                    </td>
                    <td class="text-center">
                      @if (@Model.StudentDataLocking[i].StudentDataLocked == true)
                       {
                            <input type="checkbox" checked="checked" disabled="disabled" />
                            <input type="hidden" name="HasSignedAContract" asp-for="@Model.StudentDataLocking[i].SignedAContract" value="@Model.StudentDataLocking[i].Id" id="checkbox-@Model.StudentDataLocking[i].Id" class="checkbox-inline text-center">
                       }
                       else
                        {
                            <input type="checkbox" name="HasSignedAContract" asp-for="@Model.StudentDataLocking[i].SignedAContract" value="@Model.StudentDataLocking[i].Id" id="checkbox-@Model.StudentDataLocking[i].Id" class="checkbox-inline text-center">
                       }
                    </td>
                    <td class="text-center">
                        <input type="checkbox" name="HasStudentDataLocked" asp-for="@Model.StudentDataLocking[i].StudentDataLocked" value="@Model.StudentDataLocking[i].Id" id="checkbox-@Model.StudentDataLocking[i].Id" class="checkbox-inline text-center">
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <input type="submit" value="Išsaugoti" class="btn btn-secondary float-right mt-3 mb-3" />
</form>

<script>
    function callChangefunc(name, value) {
        window.location.href = `/Course/Index?${name}=${value}`;
    }
    $('.StudentDataLockingTable').DataTable({
        "order": [[5, "desc"]],
        "columnDefs": [
            {
                "orderable": false, "targets": [0, 1, 2, 7, 8],
            },
        ],
        language: {
            search: "Paieška",
            info: "Nuo _START_ iki _END_ iš _TOTAL_ įrašų",
            "lengthMenu": "Rodyti _MENU_ įrašų",
            zeroRecords: "Įrašų nerasta",
            infoEmpty: "Įrašai rodomi nuo 0 iki 0 iš 0 įrašų",
            infoFiltered: "(ieškota iš _MAX_ įrašų)",
            paginate: {
                first: "Pirmas",
                previous: "Ankstesnis",
                next: "Sekantis",
                last: "Paskutinis",
            }
        }
    });
</script>