@model PRIS.Web.Models.CourseModels.StudentEvaluationListViewModel

@{
    ViewData["Title"] = "Index";
}

<h3>
    Kandidatų sąrašas
</h3>
@Html.ActionLink("Grįžti", "Main", "Home", new { }, new { @class = "btn btn-outline-secondary float-right rounded-pill" })
    <form asp-action="Index" method="get" class="d-none d-sm-inline-block form-inline mr-auto my-2 my-md-0 mw-100">
        <div class="input-group">
            <select name="ExamId" class="btn btn-outline-secondary float-right mr-3">
                <option style="display:none">@Model.SelectedAcceptancePeriod</option>

                @foreach (var ap in Model.AcceptancePeriods)
                {
                    <option value="@ap.Text">@ap.Text</option>
                }
            </select>
            <select name="CityId" class="btn btn-outline-secondary float-right mr-3">
                <option style="display:none">@Model.SelectedCity</option>
                @foreach (var ap in Model.Cities)
                {
                    <option value="@ap.Text">@ap.Text</option>
                }
            </select>
            <select name="CourseId" class="btn btn-outline-secondary float-right mr-3">
                <option style="display:none">@Model.SelectedPriority</option>
                @foreach (var ap in Model.Courses)
                {
                    <option value="@ap.Text">@ap.Text</option>
                }
            </select>
            <button class="btn btn-primary rounded-circle ml-1 mr-1" type="submit" value="Search">
                <i class="fas fa-search fa-sm"></i>
            </button>
        </div>
</form>

<hr />
<div class="text-danger">@ViewContext.TempData["ErrorMessage"]</div>

<table class="table table-bordered AnalizeTable">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.StudentEvaluations.FirstOrDefault().FirstName)</th>
            <th>@Html.DisplayNameFor(model => model.StudentEvaluations.FirstOrDefault().LastName)</th>
            <th>@Html.DisplayNameFor(model => model.StudentEvaluations.FirstOrDefault().Email)</th>
            <th>
                @Html.DisplayNameFor(model => model.StudentEvaluations.FirstOrDefault().PhoneNumber)
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.PercentageGradeSort">@Html.DisplayNameFor(model => model.StudentEvaluations.FirstOrDefault().FinalTestPoints)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.ConversationGradeSort">@Html.DisplayNameFor(model => model.StudentEvaluations.FirstOrDefault().ConversationGrade)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.FinalAverageGradeSort">Galutinis balas</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.PrioritySort">I Prioritetas</a>
            </th>
            <th>
                II Prioritetas
            </th>
            <th>
                III Prioritetas
            </th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.StudentEvaluations.Count; i++)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).FinalTestPoints)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).ConversationGrade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).FinalAverageGrade)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).Priority)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).Priority2)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudentEvaluations.ElementAtOrDefault(i).Priority3)
                </td>
            </tr>
        }
    </tbody>
</table>
<p class="mb-3"></p>
<script>
    function callChangefunc(name, value) {
        window.location.href = `/Course/Index?${name}=${value}`;
    }
    $('.AnalizeTable').DataTable({
        "order": [[6, "desc"]],
        "columnDefs": [
            {
                "orderable": false, "targets": [0, 1, 2, 3, 8, 9],
            },
        ],
        language: {
            search: "Paieška",
            info: "Nuo _START_ iki _END_ iš _TOTAL_ įrašų",
            "lengthMenu": "Rodyti _MENU_ įrašų",
            zeroRecords: "Įrašų nerasta",
            infoEmpty: "Įrašai rodomi nuo 0 iki 0 iš 0 įrašų",
            infoFiltered: "(ieškota iš _MAX_ įrašų)",
            paginate: {
                first: "Pirmas",
                previous: "Ankstesnis",
                next: "Sekantis",
                last: "Paskutinis",
            }
        }
    });
</script>